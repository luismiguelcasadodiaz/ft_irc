1 	     messages_.insert(std::make_pair(ERR_BADCHANMASK, (IrcMessage){"<channel> :Bad Channel Mask"}));
1 	     messages_.insert(std::make_pair(ERR_BADCHANNELKEY, (IrcMessage){"<channel> :Cannot join channel (+k)"}));
1 	     messages_.insert(std::make_pair(ERR_BADMASK, (IrcMessage){"<mask> :Bad Server/host mask"})); 
1 	     messages_.insert(std::make_pair(ERR_BANNEDFROMCHAN, (IrcMessage){"<channel> :Cannot join channel (+b)"}));
1 	     messages_.insert(std::make_pair(ERR_CANNOTSENDTOCHAN, (IrcMessage){"<channel name> :Cannot send to channel"})); 
1 	     messages_.insert(std::make_pair(ERR_CHANNELISFULL, (IrcMessage){"<channel> :Cannot join channel (+l)"}));
1 	     messages_.insert(std::make_pair(ERR_CHANOPRIVSNEEDED, (IrcMessage){"<channel> :You're not channel operator"})); 
1 	     messages_.insert(std::make_pair(ERR_ERRONEUSNICKNAME, (IrcMessage){"<nick> :Erroneous nickname"})); 
1 	     messages_.insert(std::make_pair(ERR_INVITEONLYCHAN, (IrcMessage){"<channel> :Cannot join channel (+i)"}));
1 	     messages_.insert(std::make_pair(ERR_KEYSET, (IrcMessage){"<channel> :Channel key already set"}));
1 	     messages_.insert(std::make_pair(ERR_NEEDMOREPARAMS, (IrcMessage){"<command> :Not enough parameters"})); 
1 	     messages_.insert(std::make_pair(ERR_NICKNAMEINUSE, (IrcMessage){"<nick> :Nickname is already in use"})); 
1 	     messages_.insert(std::make_pair(ERR_NOADMININFO, (IrcMessage){"<server> :No administrative info available"})); 
1 	     messages_.insert(std::make_pair(ERR_NOCHANMODES, (IrcMessage){"<channel> :Channel doesn't support modes"}));
1 	     messages_.insert(std::make_pair(ERR_NOLOGIN, (IrcMessage){"<user> :User not logged in"})); 
1 	     messages_.insert(std::make_pair(ERR_NORECIPIENT, (IrcMessage){":No recipient given (<command>)"})); 
1 	     messages_.insert(std::make_pair(ERR_NOSUCHCHANNEL, (IrcMessage){"<channel name> :No such channel"})); 
1 	     messages_.insert(std::make_pair(ERR_NOSUCHNICK, (IrcMessage){"<nickname> :No such nick/channel"})); 
1 	     messages_.insert(std::make_pair(ERR_NOSUCHSERVER, (IrcMessage){"<server name> :No such server"})); 
1 	     messages_.insert(std::make_pair(ERR_NOSUCHSERVICE, (IrcMessage){"<service name> :No such service"})); 
1 	     messages_.insert(std::make_pair(ERR_NOTONCHANNEL, (IrcMessage){"<channel> :You're not on that channel"})); 
1 	     messages_.insert(std::make_pair(ERR_NOTOPLEVEL, (IrcMessage){"<mask> :No toplevel domain specified"})); 
1 	     messages_.insert(std::make_pair(ERR_TOOMANYCHANNELS, (IrcMessage){"<channel name> :You have joined too many channels"})); 
1 	     messages_.insert(std::make_pair(ERR_UNAVAILRESOURCE, (IrcMessage){"<nick/channel> :Nick/channel is temporarily unavailable"})); 
1 	     messages_.insert(std::make_pair(ERR_UNKNOWNCOMMAND, (IrcMessage){"<command> :Unknown command"})); 
1 	     messages_.insert(std::make_pair(ERR_WASNOSUCHNICK, (IrcMessage){"<nickname> :There was no such nickname"})); 
1 	     messages_.insert(std::make_pair(ERR_WILDTOPLEVEL, (IrcMessage){"<mask> :Wildcard in toplevel domain"})); 
1 	     messages_.insert(std::make_pair(RPL_ADMINEMAIL, (IrcMessage){":<admin info>"})); 
1 	     messages_.insert(std::make_pair(RPL_ADMINLOC1, (IrcMessage){":<admin info>"})); 
1 	     messages_.insert(std::make_pair(RPL_ADMINLOC2, (IrcMessage){":<admin info>"})); 
1 	     messages_.insert(std::make_pair(RPL_ADMINME, (IrcMessage){"<server> :Administrative info"})); 
1 	     messages_.insert(std::make_pair(RPL_CREATED, (IrcMessage){"This server was created <date>"})); 
1 	     messages_.insert(std::make_pair(RPL_ENDOFBANLIST, (IrcMessage){"<channel> :End of channel ban list"})); 
1 	     messages_.insert(std::make_pair(RPL_ENDOFEXCEPTLIST, (IrcMessage){"<channel> :End of channel exception list"})); 
1 	     messages_.insert(std::make_pair(RPL_ENDOFINVITELIST, (IrcMessage){"<channel> :End of channel invite list"})); 
1 	     messages_.insert(std::make_pair(RPL_ENDOFLINKS, (IrcMessage){"<mask> :End of LINKS list"})); 
1 	     messages_.insert(std::make_pair(RPL_ENDOFNAMES, (IrcMessage){"<channel> :End of NAMES list"})); 
1 	     messages_.insert(std::make_pair(RPL_ENDOFSTATS, (IrcMessage){"<stats letter> :End of STATS report"})); 
1 	     messages_.insert(std::make_pair(RPL_ENDOFWHO, (IrcMessage){"<name> :End of WHO list"})); 
1 	     messages_.insert(std::make_pair(RPL_ENDOFWHOIS, (IrcMessage){"<nick> :End of WHOIS list"})); 
1 	     messages_.insert(std::make_pair(RPL_ENDOFWHOWAS, (IrcMessage){"<nick> :End of WHOWAS"})); 
1 	     messages_.insert(std::make_pair(RPL_INFO, (IrcMessage){":<string>"})); 
1 	     messages_.insert(std::make_pair(RPL_LUSERCHANNELS, (IrcMessage){"<integer> :channels formed"})); 
1 	     messages_.insert(std::make_pair(RPL_LUSEROP, (IrcMessage){"<integer> :operator(s) online"})); 
1 	     messages_.insert(std::make_pair(RPL_LUSERUNKNOWN, (IrcMessage){"<integer> :unknown connection(s)"})); 
1 	     messages_.insert(std::make_pair(RPL_MOTD, (IrcMessage){":- <text>"})); 
1 	     messages_.insert(std::make_pair(RPL_MOTDSTART, (IrcMessage){":- <server> Message of the day - "})); 
1 	     messages_.insert(std::make_pair(RPL_NOTOPIC, (IrcMessage){"<channel> :No topic is set"})); 
1 	     messages_.insert(std::make_pair(RPL_REHASHING, (IrcMessage){"<config file> :Rehashing"})); 
1 	     messages_.insert(std::make_pair(RPL_SUMMONING, (IrcMessage){"<user> :Summoning user to IRC"})); 
1 	     messages_.insert(std::make_pair(RPL_TRYAGAIN, (IrcMessage){"<command> :Please wait a while and try again."})); 
1 	     messages_.insert(std::make_pair(RPL_UMODEIS, (IrcMessage){"<user mode string>"})); 
1 	     messages_.insert(std::make_pair(RPL_WHOISOPERATOR, (IrcMessage){"<nick> :is an IRC operator"})); 
1 	     messages_.insert(std::make_pair(RPL_YOURESERVICE, (IrcMessage){"You are service <servicename>"})); 
